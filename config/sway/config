# Read `man 5 sway` for a complete reference.

### Variables
#
# Command/Windows logo key. Use Mod1 for Alt.
set $mod Mod4

set $left h
set $down j
set $up k
set $right l
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show drun -i | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
# output * bg @datadir@/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Remember to (hard)link your wallpaper there!
output * {
    bg ~/.wallpaper fill
    adaptive_sync off
}

output "HDMI-A-2" {
    mode 2560x1440@143.991Hz
}

output "DP-2" disable

output "Samsung Display Corp. 0x4180 Unknown" {
    adaptive_sync off
    scale 1.75
}

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w \
         timeout 300 'swaylock -c 000000' \
         timeout 5 'swaylock_turn_off' \
         resume 'swaymsg "output * dpms on"' \
         timeout 320 'swaymsg "output * dpms off"' \
         resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -c 000000'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:keyboard {
    xkb_layout "us,ru"
    xkb_options "grp:ctrl_space_toggle,grp:caps_toggle"
}

input type:mouse {
    natural_scroll disabled
    accel_profile flat
    pointer_accel 0
}


input type:touchpad {
    natural_scroll enabled
    scroll_method two_finger

    # click_method should be ordered like this,
    # otherwise it breaks!
    click_method button_areas
    click_method clickfinger
    middle_emulation enabled

    events disabled_on_external_mouse
    tap disabled
}

### Key bindings
# Forward slash is not allowed on Unix-like OS, so this will never be used by a directory in sessionizer
bindsym $mod+t exec $term bash -c 'tmux attach -t / || tmux new-session -s /'
# Will close other terminals attached to sessionizer
bindsym $mod+Shift+t exec $term bash -c 'tmux attach -x -t tmux_sessionizer 2> /dev/null || tmux new-session -s tmux_sessionizer "tmux_sessionizer"'

# Doesn't actually kill the window, just closes it normally
bindsym $mod+q kill
bindsym $mod+space exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

bindsym $mod+Shift+c reload

# Show logout window
bindsym $mod+Shift+p exec nwg-bar
bindsym $mod+p exec swaylock -c 000000

# Capture all screens to clipboard
bindsym Print exec grim -t png - | tee ~/Pictures/"$(date '+%Y-%m-%dT%T.%3N').png" | wl-copy -t image/png
# Capture the specified screen area to clipboard
bindsym Shift+Print exec grim -t png -g "$(slurp)" - | tee ~/Pictures/"$(date '+%Y-%m-%dT%T.%3N').png" | wl-copy -t image/png
# Capture the focused monitor to clipboard
bindsym Shift+Control+Print exec grim -t png -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | tee ~/Pictures/"$(date '+%Y-%m-%dT%T.%3N').png" | wl-copy -t image/png

#
# Moving around:
#
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+Return floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+Return focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+z move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+z scratchpad show
#
# Resizing containers:
#
set $resizemode $mod+r
mode "resize" {
    set $hamount 20px
    set $vamount 20px
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width $hamount
    bindsym $down resize grow height $vamount
    bindsym $up resize shrink height $vamount
    bindsym $right resize grow width $hamount

    # Ditto, with arrow keys
    bindsym Left resize shrink width $hamount
    bindsym Down resize grow height $vamount
    bindsym Up resize shrink height $vamount
    bindsym Right resize grow width $hamount

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $resizemode mode "default"
}
bindsym $resizemode mode "resize"

bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym XF86AudioLowerVolume exec wpctl set-volume -l 1.0 @DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioRaiseVolume exec wpctl set-volume -l 1.0 @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrigHtnessUp exec brightnessctl set 5%+
# Toggles between three modes: on, off and "off while external mouse is being used"
bindsym XF86TouchpadToggle exec swaymsg input type:touchpad events toggle
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_SOURCE@ toggle

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
#
#     # swaybar_command waybar
# }

bar {
    swaybar_command waybar
}

font pango:Iosevka 10

for_window [class="^.*"] border pixel 1

# border, background, text, indicator, child_border
for_window [class="^.*"] client.focused #3d3d3d #000000 #ffffff #3d3d3d #575757

for_window [class="^.*"] border none
for_window [class="^.*"] border pixel 1 criteria=(floating) border none
for_window [class="^.*"] border pixel 1 no_focus border none

exec 'blueman-applet'
exec 'nm-applet --indicator'
exec 'inhibit-bridge'
# According to mako's docs, this shouldn't be necessary, but notifications don't appear without this for some reason
exec 'mako'
# TODO: make this hide itself to not quit it every time
exec 'nekoray'

include @sysconfdir@/sway/config.d/*
include /etc/sway/config.d/*

