#!/usr/bin/env bash

set -euo pipefail

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
DOTFILES_DIR=$(realpath $SCRIPT_DIR/..)
CONFIG_DIR=$(realpath $DOTFILES_DIR/config)
CONFIG_CUSTOM_DIR=$(realpath $DOTFILES_DIR/config_custom)

echoerr () { echo "$@" 1>&2; }

relink () {
    local src=$1
    local dst=$2

    if [[ -e $dst ]]; then
        if [[ -L $dst ]]; then
            rm $dst
        else
            echoerr "File or directory $(realpath $dst) exists"
            exit 1
        fi
    fi

    # --force to overwrite dead symlinks
    # macOS, for example, doesn't have full-length flags
    if [ "$(uname)" = "Linux" ]; then
        ln --force --symbolic $(realpath $src) $dst
    else
        ln -s -F $(realpath $src) $dst
    fi
}

relink_custom () {
    local src_rel=$1
    local dst=$2

    relink $CONFIG_CUSTOM_DIR/$src_rel $dst
}

linux_setup () {
    if [[ -z $HOME ]]; then
        echoerr '$HOME is not set'
        exit 1
    fi

    local dir="$HOME/.config/systemd"

    if [[ -e $dir && ! -d $dir ]]; then
        echoerr "$dir exists, but it's not a directory"
    else
        mkdir -p $dir 2> /dev/null
    fi

    relink "$DOTFILES_DIR/system/systemd_user" "$dir/user"
}

macos_setup () {
    defaults write com.apple.dock autohide-delay -float 0.015
    defaults write com.apple.dock autohide-time-modifier -float 0.2
    killall Dock
}

# Function won't run in child shell without this
export -f echoerr
export -f relink
export -f relink_custom

fd --hidden --type directory --type file --exact-depth 1 --search-path $CONFIG_DIR --exec bash -c 'relink $(realpath {}) ~/.config/{/}'

relink_custom ideavimrc ~/.ideavimrc
relink_custom gitconfig_global ~/.gitconfig_global

for APP in electron brave chromium chrome discord signal
do
    relink_custom electron-flags.conf ~/.config/$APP-flags.conf
done

MIN_ELECTRON_VERSION="${MIN_ELECTRON_VERSION:-24}"
MAX_ELECTRON_VERSION="${MAX_ELECTRON_VERSION:-99}"
# Relink electron flags, because they're version-specific for some reason.
if [ "${LINK_ELECTRON_FLAGS:-false}" = true ]; then
    for ((i=1;i<=MIN_ELECTRON_VERSION;i++)) do
        relink_custom electron-flags-legacy.conf ~/.config/electron$i-flags.conf
    done
    for ((i=$(( MIN_ELECTRON_VERSION + 1 ));i<=MAX_ELECTRON_VERSION;i++)) do
        relink_custom electron-flags.conf ~/.config/electron$i-flags.conf
    done
fi

if [ "$(uname)" = "Linux" ] && [ "${LINK_LINUX_FILES:-false}" = true ]; then
    linux_setup
fi

if [ "$(uname)" = "Darwin" ] && [ "${LINK_MACOS_FILES:-true}" = true ]; then
    macos_setup
fi
